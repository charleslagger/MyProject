/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// TODO
/**
 * Access control rules for mynetwork
 */
rule Wholesaler {
  description: "Allow collectors to see the product that are for sale"
  participant(t): "uet.khoenguyen.exchange.Collector"
  operation: READ,UPDATE
  resource(v): "uet.khoenguyen.exchange.Product"
  condition: (v.owner.getIdentifier() != t.getIdentifier() )
  action: ALLOW
}

rule CollectorAssets {
  description: "Allow collectors to see the product that they own"
  participant(t): "uet.khoenguyen.exchange.Collector"
  operation: ALL
  resource(v): "uet.khoenguyen.exchange.Product"
  condition: (v.owner.getIdentifier() != t.getIdentifier()  )
  action: DENY
}

rule ProductsView {
  description: "Make the products themselves visible"
  participant: "uet.khoenguyen.exchange.Collector"
  operation: ALL
  resource: "uet.khoenguyen.exchange.Product"
  action: ALLOW
}

rule MakeTrades_1 {
  description: "Allow collectors to submit trades"
  participant: "uet.khoenguyen.exchange.Collector"
  operation: ALL
  resource: "uet.khoenguyen.exchange.Trade"
  action: ALLOW
}

rule makeListProToCart {
  description: "Allow collectors to add product sale to cart"
  participant: "uet.khoenguyen.exchange.Collector"
  operation: READ, UPDATE
  resource: "uet.khoenguyen.exchange.Product"
  action: ALLOW
}

// rule increaseBalance {
//   description: "Allow collectors to add money to their's balance"
//   participant(t): "uet.khoenguyen.exchange.Collector"
//   operation: CREATE, READ, UPDATE
//   resource(v): "uet.khoenguyen.exchange.Collector"
//   condition: (v.getIdentifier() == t.getIdentifier())
//   action: ALLOW
// }


rule CollectorsSeeThemselves {
  description: "Collectors can see their own participant"
  participant(t): "uet.khoenguyen.exchange.Collector"
  operation: ALL
  resource(v): "uet.khoenguyen.exchange.Collector"
  condition: (v.getIdentifier() == t.getIdentifier())
  action: ALLOW
}

rule CollectorsSeeOwnTransactions {
  description: "Collectors should be able to see the history of the own transactions"
  participant(t): "uet.khoenguyen.exchange.Collector"
  operation: READ
  resource(v): "org.hyperledger.composer.system.HistorianRecord"
  condition: (v.participantInvoking.getIdentifier() == t.getIdentifier())
  action: ALLOW
}

rule DenyHistorian {
  description: "Collectors can't see the record of what has happened in the business network"
  participant: "uet.khoenguyen.exchange.Collector"
  operation: READ,UPDATE,DELETE
  resource: "org.hyperledger.composer.system.HistorianRecord"
  action: DENY
}

rule NetworkUpdate {
  description:  "System ACL to permit all access"
  participant: "uet.khoenguyen.exchange.Collector"
  operation: READ
  resource: "org.hyperledger.composer.system.Network"
  action: ALLOW
}

rule SystemACL {
  description:  "System ACL to permit all access"
  participant: "org.hyperledger.composer.system.Participant"
  operation: ALL
  resource: "org.hyperledger.composer.system.**"
  action: ALLOW
}

rule NetworkAdminUser {
    description: "Grant business network administrators full access to user resources"
    participant: "org.hyperledger.composer.system.NetworkAdmin"
    operation: ALL
    resource: "**"
    action: ALLOW
}

rule NetworkAdminSystem {
    description: "Grant business network administrators full access to system resources"
    participant: "org.hyperledger.composer.system.NetworkAdmin"
    operation: ALL
    resource: "org.hyperledger.composer.system.**"
    action: ALLOW
}